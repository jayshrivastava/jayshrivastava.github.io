{"version":3,"sources":["util/fonts.ts","util/formatters.tsx","components/experience.tsx","components/experiences.tsx","components/links.tsx","components/header.tsx","data/header.ts","views/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["textClass","codeClass","subTitleClass","titleClass","collapseLinksInText","target","className","text","link","closedBracketWithLinkInside","openBracketsWithCharsInsideSingle","placeholders","matchAll","links","length","console","error","replaceAll","i","replace","substring","Experience","props","company","position","start","end","content","summary","Experiences","Container","Row","Col","md","span","offset","experiences","map","experience","idx","Links","useState","selectedDisplayLink","setSelectedDisplayLink","xs","sm","lg","onMouseEnter","displayLink","onMouseLeave","href","join","Header","id","onClick","changeTheme","lightValue","darkValue","sessionThemeKey","Home","theme","setTheme","sessionTheme","sessionStorage","getItem","setItem","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.616564b9.chunk.js","sourcesContent":["// This should contain classnames which have global scope.\n// Globally scoped scss should excess in views/home.scss only.\nexport const textClass = \"text\";\nexport const codeClass = \"text-code\";\nexport const subTitleClass = \"subtitle\";\nexport const titleClass = \"title\";\nexport const superTitleClass = \"supertitle\";\n\nexport const highlightedClass = \"highlighted\";","// collapseLinksInText inlines mardown-style hyperlinks in text.\n// Eg. \"check out this [link](url)\" => \"check out this <a class=${className} href=${link}><u>${text}</u></a>`\"\n// To safely use the text containing tsx as tsx, use the Markup component: import { Markup } from 'interweave'.\n//\n// TODO: Change this function to return TSX instead of a string.\nexport const collapseLinksInText = (target :string, className: string) : string => {\n    const linkString = (text: string, link: string) => {\n        return (\n            `<a class=${className} href=${link}><u>${text}</u></a>`\n        )\n    }\n\n    const openBracketsWithCharsInside = /\\[(.|\\/|:|\\.)+\\]/g\n    const closedBracketWithLinkInside = /\\(.+\\)/g\n    const openBracketsWithCharsInsideSingle = /\\[.+\\]/\n\n    const placeholders = [...target.matchAll(openBracketsWithCharsInside)]\n\n    const links = [...target.matchAll(closedBracketWithLinkInside)]\n\n    if (links.length !== placeholders.length) {\n        console.error(\"The number of links and placeholders in target text do not match:\\n\", target)\n        return target\n    }\n\n    target = target.replaceAll(closedBracketWithLinkInside, \"\")\n\n    for (let i = 0; i < placeholders.length; i++) {\n        target = target.replace(\n            openBracketsWithCharsInsideSingle,\n            linkString(\n                placeholders[i][0].substring(1,placeholders[i][0].length-1),\n                links[i][0].substring(1,links[i][0].length - 1)\n            )\n        )\n    }\n\n    return target\n}","\nimport {textClass, codeClass, subTitleClass} from './../util/fonts'\nimport { Markup } from 'interweave';\nimport {collapseLinksInText} from './../util/formatters'\n\ninterface ExperienceProps {\n    company: string\n    position: string\n    start: string\n    end: string\n    summary: string\n}\n\nfunction Experience(props : ExperienceProps) {\n    return (\n        <div >\n            <p className={subTitleClass}> {props.company} </p>\n            <p className={codeClass} > {props.position} </p>\n            <p className={codeClass} > {`[${props.start}, ${props.end}]`} </p>\n            <div className={textClass}>\n                <Markup content={collapseLinksInText(props.summary, textClass)}/>\n            </div>\n            <p/>\n        </div>\n    )\n}\n\nexport default Experience\n","\nimport {titleClass} from '../util/fonts'\nimport experiences from '../data/experiences.json'\nimport Experience from './experience'\nimport {Container, Row, Col} from 'react-bootstrap'\n\nfunction Experiences() {\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <p className={titleClass}> Experiences </p>\n                    <p/>\n                    {\n                        experiences.map((experience, idx) => {\n                            return <Experience key={idx}\n                                {...experience}\n                            />\n                        })\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Experiences\n","import links from './../data/links.json'\nimport {textClass, highlightedClass} from './../util/fonts'\nimport {Container, Row, Col} from 'react-bootstrap'\nimport {useState} from 'react'\nimport './links.scss'\n\nfunction Links() {\n    const [selectedDisplayLink, setSelectedDisplayLink] = useState(\"\")\n\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    {\n                        links.map((link, idx) => {\n                            return (\n                                <Row key={idx}>\n                                    <Col xs={{ span: 2 }} sm={{ span: 2 }} md={{ span: 2 }} lg={{ span: 1 }}>\n                                        <a\n                                            onMouseEnter={()=>{setSelectedDisplayLink(link.displayLink)}}\n                                            onMouseLeave={()=>{setSelectedDisplayLink(\"\")}}\n                                            className={textClass}\n                                            href={link.link}> {link.text}\n                                        </a>\n                                    </Col>\n                                    <Col xs={{ span: 10 }} sm={{ span: 10 }} md={{ span: 10 }} lg={{ span: 11 }}>\n                                        <p\n                                            className={[\n                                                \"display-link\", textClass,\n                                                selectedDisplayLink === link.displayLink ? highlightedClass : \"\"\n                                            ].join(\" \")}>\n                                            {link.displayLink}\n                                        </p>\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Links","import {subTitleClass, textClass, titleClass} from './../util/fonts'\nimport {Container, Row, Col} from 'react-bootstrap'\nimport './header.scss'\nimport {bigIdea, smallerIdea} from'./../data/header'\nimport {collapseLinksInText} from './../util/formatters'\nimport { Markup } from 'interweave';\n\n\ninterface HeaderProps {\n    changeTheme: ()=>void\n}\n\nfunction Header(props: HeaderProps) {\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <Row>\n                        <Col xs={{ span: 7 }} sm={{ span: 6 }} md={{ span: 6 }}>\n                            <p className={subTitleClass}> Jayant Shrivastava </p>\n                        </Col>\n\n                        <Col xs={{ span: 5 }} sm={{ span: 6}} md={{ span: 6}}>\n                            <p id=\"change-theme\" className={textClass} onClick={props.changeTheme}>\n                                <u> Change Theme </u>\n                            </p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <p className={titleClass}> {bigIdea}  </p>\n                </Col>\n            </Row>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <div className={textClass}>\n                        <Markup content={collapseLinksInText(smallerIdea, textClass)}/>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n\n    )\n}\n\nexport default Header","// TODO: find a good way to store this text (csv? arrays?).\n// The <br> tags do not allow for much customization (scss styling etc).\n\nexport const bigIdea =\n`Hello.`\n\nexport const smallerIdea = `\nI am a 5x SWE intern and current Waterloo Computer Engineering student from Markham, Ontario, CA. I enjoy low level\nprogramming and systems engineering. In the past, I have worked in the areas of fullstack development, distributed systems, databases,\ncloud infrastructure, and data engineering.\n<br>\n<br>\nI recently finished an internship working on [CockroachDB](https://github.com/cockroachdb/cockroach), a distributed,\ncloud-native, SQL database written in Go. Previously, I worked on real-time ad auctions on Shopify's\n[App Store Ads]\n(https://shopify.dev/concepts/app-store/advertising) team.\n<br>\n<br>\nI'm also into gaming, running, basketball, playing the piano, and cooking.`\n","import './home.scss'\nimport {useState} from \"react\"\nimport Experiences from '../components/experiences'\nimport Links from '../components/links'\nimport Header from '../components/header'\nimport {Container, Row} from 'react-bootstrap'\n\n\nconst lightValue = \"light\"\nconst darkValue = \"dark\"\nconst sessionThemeKey = \"jayshrivastava.theme\"\n\nfunction Home() {\n    const [theme, setTheme] = useState(lightValue)\n\n    // Sync the theme with session storage.\n    const sessionTheme = sessionStorage.getItem(sessionThemeKey)\n    if (sessionTheme === null) {\n        sessionStorage.setItem(sessionThemeKey, theme)\n    } else if (sessionTheme !== theme) {\n        setTheme(sessionTheme)\n    }\n\n    const toggleTheme = () => {\n        if (theme === lightValue) {\n            sessionStorage.setItem(sessionThemeKey, darkValue)\n            setTheme(darkValue)\n        } else {\n            sessionStorage.setItem(sessionThemeKey, lightValue)\n            setTheme(lightValue)\n        }\n    }\n\n    return (\n        <div className = {theme} >\n            <Container>\n                <Row>\n                   <Header changeTheme={toggleTheme}/>\n                </Row>\n                <Row>\n                    <Links/>\n                </Row>\n                <Row>\n                    <Experiences/>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Home\n","import Home from './views/home'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n\n    <Router>\n      <div>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n\n          </ul>\n        </nav> */}\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}