{"version":3,"sources":["util/fonts.ts","components/experience.tsx","components/experiences.tsx","components/links.tsx","util/formatters.tsx","components/header.tsx","data/header.ts","views/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["textClass","codeClass","subTitleClass","Experience","props","className","company","position","start","end","summary","Experiences","Container","Row","Col","md","span","offset","experiences","map","experience","idx","Links","useState","selectedDisplayLink","setSelectedDisplayLink","links","link","xs","sm","lg","onMouseEnter","displayLink","onMouseLeave","href","text","join","collapseLinksInText","target","closedBracketWithLinkInside","openBracketsWithCharsInsideSingle","placeholders","matchAll","length","console","error","replaceAll","i","replace","substring","Header","id","onClick","changeTheme","content","lightValue","darkValue","sessionThemeKey","Home","theme","setTheme","sessionTheme","sessionStorage","getItem","setItem","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b433c25c.chunk.js","sourcesContent":["export const textClass = \"text\";\nexport const codeClass = \"text-code\";\nexport const subTitleClass = \"subtitle\";\nexport const titleClass = \"title\";\nexport const superTitleClass = \"supertitle\";\n\nexport const highlightedClass = \"highlighted\";","\nimport {textClass, codeClass, subTitleClass} from './../util/fonts'\n\ninterface ExperienceProps {\n    company: string\n    position: string\n    start: string\n    end: string\n    summary: string\n}\n\nfunction Experience(props : ExperienceProps) {\n    return (\n        <div >\n            <p className={subTitleClass}> {props.company} </p>\n            <p className={codeClass} > {props.position} </p>\n            <p className={codeClass} > {\"[\" + props.start + \", \" + props.end + \"]\"} </p>\n            <div className={textClass} >{props.summary}</div>\n            <p/>\n        </div>\n    )\n}\n\nexport default Experience\n","\nimport {titleClass} from '../util/fonts'\nimport experiences from '../data/experiences.json'\nimport Experience from './experience'\nimport {Container, Row, Col} from 'react-bootstrap'\n\nfunction Experiences() {\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <p className={titleClass}> Experiences </p>\n                    <p/>\n                    {\n                        experiences.map((experience, idx) => {\n                            return <Experience key={idx}\n                                {...experience}\n                            />\n                        })\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Experiences\n","import links from './../data/links.json'\nimport {textClass, highlightedClass} from './../util/fonts'\nimport {Container, Row, Col} from 'react-bootstrap'\nimport {useState} from 'react'\nimport './links.scss'\n\nfunction Links() {\n    const [selectedDisplayLink, setSelectedDisplayLink] = useState(\"\")\n\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    {\n                        links.map((link, idx) => {\n                            return (\n                                <Row key={idx}>\n                                    <Col xs={{ span: 2 }} sm={{ span: 2 }} md={{ span: 1 }} lg={{ span: 1 }}>\n                                        <a\n                                            onMouseEnter={()=>{setSelectedDisplayLink(link.displayLink)}}\n                                            onMouseLeave={()=>{setSelectedDisplayLink(\"\")}}\n                                            className={textClass}\n                                            href={link.link}> {link.text}\n                                        </a>\n                                    </Col>\n                                    <Col xs={{ span: 10 }} sm={{ span: 10 }} md={{ span: 11 }} lg={{ span: 11 }}>\n                                        <p\n                                            className={[\n                                                \"display-link\", textClass,\n                                                selectedDisplayLink === link.displayLink ? highlightedClass : \"\"\n                                            ].join(\" \")}>\n                                            {link.displayLink}\n                                        </p>\n                                    </Col>\n                                </Row>\n                            )\n                        })\n                    }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Links","export const collapseLinksInText = (target :string, className: string) => {\n    const linkString = (text: string, link: string) => {\n        return (\n            `<a class=${className} href=${link}>\n                <u> ${text} </u>\n            </a>`\n        )\n    }\n\n    const openBracketsWithCharsInside = /\\(.+\\)/g\n    const closedBracketWithLinkInside = /\\[(.|\\/|:|\\.)+\\]/g\n    const openBracketsWithCharsInsideSingle = /\\(.+\\)/\n\n    const placeholders = [...target.matchAll(openBracketsWithCharsInside)]\n\n    const links = [...target.matchAll(closedBracketWithLinkInside)]\n\n    if (links.length !== placeholders.length) {\n        console.error(\"The number of links and placeholders in target text do not match:\\n\", target)\n        return target\n    }\n\n    target = target.replaceAll(closedBracketWithLinkInside, \"\")\n\n    for (let i = 0; i < placeholders.length; i++) {\n        target = target.replace(\n            openBracketsWithCharsInsideSingle,\n            linkString(\n                placeholders[i][0].substring(1,placeholders[i][0].length-1),\n                links[i][0].substring(1,links[i][0].length - 1)\n            )\n        )\n    }\n\n    return target\n}","import {subTitleClass, textClass, superTitleClass} from './../util/fonts'\nimport {Container, Row, Col} from 'react-bootstrap'\nimport './header.scss'\nimport {bigIdea, smallerIdea} from'./../data/header'\nimport {collapseLinksInText} from './../util/formatters'\nimport { Markup } from 'interweave';\n\n\ninterface HeaderProps {\n    changeTheme: ()=>void\n}\n\nfunction Header(props: HeaderProps) {\n    return (\n        <Container>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <Row>\n                        <Col xs={{ span: 7 }} sm={{ span: 6 }} md={{ span: 6 }}>\n                            <p className={subTitleClass}> Jayant Shrivastava </p>\n                        </Col>\n\n                        <Col xs={{ span: 5 }} sm={{ span: 6}} md={{ span: 6}}>\n                            <p id=\"change-theme\" className={textClass} onClick={props.changeTheme}>\n                                <u> Change Theme </u>\n                            </p>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <p className={superTitleClass}> {bigIdea}  </p>\n                </Col>\n            </Row>\n            <Row className=\"pad-above-row\">\n                <Col md={{ span: 8, offset: 2 }}>\n                    <div className={textClass}>\n                        <Markup content={collapseLinksInText(smallerIdea, textClass)}/>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n\n    )\n}\n\nexport default Header","export const bigIdea =\n`I like to build large scale systems and write performant code.`\n\nexport const smallerIdea = `\nI am a 5x intern with experience in the fields of backend engineering,\ndistributed systems, databases, cloud services, and data engineering.\nI recently finished an internship working on (CockroachDB)[https://github.com/cockroachdb/cockroach], a distributed,\ncloud-native, SQL database written in Go.\n<br>\n<br>\nI'm also a 3rd Year Computer\nEngineering student at the University of Waterloo.\n<br>\n<br>\nShopify (App Store Ads)[https://shopify.dev/concepts/app-store/advertising]\n<br>\n<br>\nIn my free time, I like to play the piano, cook, play basketball,\nand run.`","import './home.scss'\nimport {useState} from \"react\"\nimport Experiences from '../components/experiences'\nimport Links from '../components/links'\nimport Header from '../components/header'\nimport {Container, Row} from 'react-bootstrap'\n\n\nconst lightValue = \"light\"\nconst darkValue = \"dark\"\nconst sessionThemeKey = \"jayshrivastava.theme\"\n\nfunction Home() {\n    const [theme, setTheme] = useState(lightValue)\n\n    // Sync the theme with session storage.\n    const sessionTheme = sessionStorage.getItem(sessionThemeKey)\n    if (sessionTheme === null) {\n        sessionStorage.setItem(sessionThemeKey, theme)\n    } else if (sessionTheme !== theme) {\n        setTheme(sessionTheme)\n    }\n\n    const toggleTheme = () => {\n        if (theme === lightValue) {\n            sessionStorage.setItem(sessionThemeKey, darkValue)\n            setTheme(darkValue)\n        } else {\n            sessionStorage.setItem(sessionThemeKey, lightValue)\n            setTheme(lightValue)\n        }\n    }\n\n    return (\n        <div className = {theme} >\n            <Container>\n                <Row>\n                   <Header changeTheme={toggleTheme}/>\n                </Row>\n                <Row>\n                    <Links/>\n                </Row>\n                <Row>\n                    <Experiences/>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Home\n","import Home from './views/home'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n\n    <Router>\n      <div>\n        {/* <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n\n          </ul>\n        </nav> */}\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}